{"version":3,"sources":["/webpack/bootstrap","../src/prepare/setup/readConfig.ts","../src/utils/fs.ts","../src/utils/io.ts","../src/prepare/setup/MonitorTools/Netdata.ts","../src/prepare/setup/Timezone.ts","../src/prepare/setup/Nginx.ts","../src/prepare/setup/MonitorTools/Journalbeat.ts","../external \"os\"","../src/prepare/index.ts","../external \"child_process\"","../src/prepare/setup/MonitoringTools.ts","../src/prepare/setup/MonitorTools/FailureNotificationServices.ts","../src/prepare/setup/aptDependencies.ts","../src/prepare/setup/MonitorTools/PersistentJournal.ts","../src/utils/printOSInfo.ts","../src/utils/spawn.ts","../src/prepare/setup/Security.ts","../src/prepare/setup/basicServer.ts","../node_modules/@actions/core/lib/command.js","../src/prepare/setup/MainServiceFiles.ts","../node_modules/@actions/core/lib/core.js","../external \"path\"","../external \"util\"","../src/prepare/setup/Root.ts","../external \"fs\"","../src/utils/User.ts","../src/utils/isGitHubAction.ts","../src/prepare/setup/MonitorTools/Cockpit.ts","/webpack/runtime/node module decorator"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","threw","modules","call","ab","__dirname","startup","runtime","Object","defineProperty","value","readConfig","io_1","done","error","config","Promise","resolve","reject","data","process","stdin","on","d","timeout","setTimeout","Error","clearTimeout","parsed","JSON","parse","debug","__awaiter","this","thisArg","_arguments","P","generator","adopt","fulfilled","step","next","e","rejected","result","then","apply","ensureLinkIs","ensureFilesAre","ensureFileIs","ensureFileContains","exists","mkdir","copyFile","chmod","chown","unlink","fs_1","args","path","promises","src","dest","dir","options","mode","assign","recursive","filePath","access","filename","contents","current","readFile","catch","toString","includes","length","writeFile","list","all","map","target","readlink","code","undefined","symlink","verbosityLevel","log","input","core_1","isGitHubAction_1","util_1","name","isGitHubAction","getInput","info","formatWithOptions","colors","env","DEBUG","console","level","cached","raw","parseInt","isFinite","RangeError","setupNetdata","spawn_1","installScriptStable","exec","setupTimezone","readConfig_1","runtimeServerTimezone","setupNginx","aptDependencies_1","addAptDependencies","certbotWebrootPath","letsencryptLive","nginxConf","setupNginxSnips","snips","letsencrypt","entries","setupNginxConfigs","domains","keys","public","private","existing","conf","basic","gzip","logging","validForwardedHeaderPattern","servers","ssl","setupNginxBasicServers","serverConfigDefault","setupNginxServersFull","webRootPath","service","serviceName","upstreamUniqueName","replace","socketFilename","workingDir","upstreamHost","serverConfig","join","nginxConfigFile","setupNginxBasic","certbotCliConfig","certbotPostRenewNginx","setupCertbot","outputFile","certbotPostRenewExampleFullChain","doCertbot","spawn","reduce","res","concat","hook","checkNginxConfig","domain","setupJournalbeat","journalbeat","disableLogging","reload","journalbeatConfig","kibanaHost","configured","elastic","hosts","stringify","username","password","logstashHosts","change","require","prepare","Nginx_1","MainServiceFiles_1","MonitoringTools_1","basicServer_1","printOSInfo_1","printOSInfo","basicServerSetup","setupMonitoringTools","setupMainServiceFiles","parent","exitCode","Journalbeat_1","Netdata_1","Cockpit_1","FailureNotificationServices_1","PersistentJournal_1","setupCockpit","setupFailureNotificationService","setupPersistentJournal","setupAptDependencies","deps","dependencies","push","_a","_b","aptDependencies","runtimeAptDependencies","useNew","dpkgForceConfOptions","stdio","DEBIAN_FRONTEND","Set","release","osVersion","split","child_process_1","defaultShell","command","first","defOpts","opts","unshift","shell","proc","ret","child","execP","promisify","setupSecurity","changed","Timezone_1","Security_1","Root_1","c","authorizedKeys","setAuthorizedKeys","__importStar","mod","__esModule","k","hasOwnProperty","os","issueCommand","properties","message","cmd","Command","stdout","write","EOL","issue","CMD_STRING","[object Object]","cmdStr","key","val","escapeProperty","escapeData","toCommandValue","String","s","serviceDescription","description","startServerCommand","extraService","extraConfigs","serviceFile","HomeDir","runtimeUser","runtimeUid","runtimeGid","dir1","dir2","dir3","Number","serviceFileContents","enable","command_1","ExitCode","exportVariable","convertedVal","setSecret","secret","addPath","inputPath","delimiter","toUpperCase","required","trim","setOutput","setCommandEcho","enabled","setFailed","Failure","isDebug","warning","startGroup","endGroup","group","fn","saveState","getState","setupRoot","User_1","path_1","user","userDir","userHome","sshConfDir","sources","fixKnownHosts","ensureKey","createAndConfigureUser","userGroups","UsernameInUseUserAddExitValue","home","GitHubKnownHosts","GITHUB_ACTIONS","argv","nmd","paths","children","enumerable","get"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t__webpack_require__.ab = __dirname + \"/\";\n\n \t// the startup function\n \tfunction startup() {\n \t\t// Load entry module and return exports\n \t\treturn __webpack_require__(96);\n \t};\n \t// initialize runtime\n \truntime(__webpack_require__);\n\n \t// run startup\n \treturn startup();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readConfig = void 0;\nconst io_1 = require(\"../../utils/io\");\nlet done;\nlet error;\nconst config = new Promise((resolve, reject) => {\n    done = resolve;\n    error = reject;\n});\nlet data = '';\nprocess.stdin.on('data', d => {\n    data += d;\n});\nconst timeout = setTimeout(() => {\n    error(new Error('Timeout reading json input'));\n}, 1000);\nprocess.stdin.on('end', () => {\n    clearTimeout(timeout);\n    const parsed = JSON.parse(data);\n    io_1.debug('Using config:', parsed);\n    // TODO: Sanitize object?\n    done(parsed);\n});\nfunction readConfig() {\n    return config;\n}\nexports.readConfig = readConfig;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ensureLinkIs = exports.ensureFilesAre = exports.ensureFileIs = exports.ensureFileContains = exports.exists = exports.mkdir = exports.copyFile = exports.chmod = exports.chown = exports.unlink = void 0;\nconst fs_1 = require(\"fs\");\nconst io_1 = require(\"./io\");\nfunction unlink(...args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const [path] = args;\n        io_1.debug('unlink:', path);\n        yield fs_1.promises.unlink(...args);\n    });\n}\nexports.unlink = unlink;\nfunction chown(...args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const [path, value] = args;\n        io_1.debug('chown:', path, 'to', value);\n        yield fs_1.promises.chown(...args);\n    });\n}\nexports.chown = chown;\nfunction chmod(...args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const [path, value] = args;\n        io_1.debug('chmod:', path, 'to', value);\n        yield fs_1.promises.chmod(...args);\n    });\n}\nexports.chmod = chmod;\nfunction copyFile(...args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const [src, dest] = args;\n        io_1.debug('copyFile:', src, 'to', dest);\n        yield fs_1.promises.copyFile(...args);\n    });\n}\nexports.copyFile = copyFile;\nfunction mkdir(dir, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (typeof options !== 'object') {\n            options = { mode: options };\n        }\n        options = Object.assign({ recursive: true }, options);\n        io_1.debug('mkdir:', dir);\n        yield fs_1.promises.mkdir(dir, options);\n    });\n}\nexports.mkdir = mkdir;\nfunction exists(filePath) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return fs_1.promises.access(filePath).then(() => true, () => false);\n    });\n}\nexports.exists = exists;\nfunction ensureFileContains(filename, contents) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const current = (yield fs_1.promises.readFile(filename).catch(() => '')).toString();\n        if (current.includes(contents))\n            return false;\n        io_1.debug('Appending to file:', filename, 'bytes:', contents.length);\n        yield fs_1.promises.writeFile(filename, current + contents);\n        return true;\n    });\n}\nexports.ensureFileContains = ensureFileContains;\nfunction ensureFileIs(filename, contents, mode) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // We could just skip the read part of this but this preserves modification times\n        const current = (yield fs_1.promises.readFile(filename).catch(() => '')).toString();\n        if (current === contents)\n            return false;\n        io_1.debug('Writing to file:', filename, 'bytes:', contents.length);\n        yield fs_1.promises.writeFile(filename, contents, { mode });\n        return true;\n    });\n}\nexports.ensureFileIs = ensureFileIs;\nfunction ensureFilesAre(list) {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield Promise.all(list.map(({ filename, contents }) => ensureFileIs(filename, contents)));\n    });\n}\nexports.ensureFilesAre = ensureFilesAre;\nfunction ensureLinkIs(target, path) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const current = yield fs_1.promises.readlink(path).catch(e => {\n            if (e.code === 'ENOENT')\n                return undefined;\n            throw e;\n        });\n        if (target === current)\n            return false;\n        if (current !== undefined)\n            yield unlink(path);\n        io_1.debug('Updating symlink', path, 'to point to', target);\n        yield fs_1.promises.symlink(target, path);\n        return true;\n    });\n}\nexports.ensureLinkIs = ensureLinkIs;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.verbosityLevel = exports.log = exports.debug = exports.input = void 0;\nconst core_1 = require(\"@actions/core\");\nconst isGitHubAction_1 = require(\"./isGitHubAction\");\nconst util_1 = require(\"util\");\n/**\n * Read Github Action `with` field from workflow yml\n * @see https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#jobsjob_idstepswith\n *\n * Often used for public and secret configuration\n *\n * @param name name of the input field\n */\nfunction input(name) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!isGitHubAction_1.isGitHubAction) {\n            throw new Error('Not made to work in other environments yet!');\n            // TODO: iff not otherwise read from local config, cli arguments, or prompt the dev?\n        }\n        return core_1.getInput(name);\n    });\n}\nexports.input = input;\nfunction debug(...info) {\n    if (isGitHubAction_1.isGitHubAction) {\n        core_1.debug(util_1.formatWithOptions({ colors: true }, ...info));\n        return;\n    }\n    if (process.env.DEBUG === undefined)\n        return;\n    console.log(...info);\n}\nexports.debug = debug;\nfunction log(level, ...info) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if ((yield verbosityLevel()) < level)\n            return;\n        debug(...info);\n    });\n}\nexports.log = log;\nlet cached;\nfunction verbosityLevel() {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (cached !== undefined)\n            return cached;\n        const raw = yield input('verbosity');\n        const level = parseInt(raw);\n        if (!isFinite(level))\n            throw new Error(`Invalid verbosity: ${raw}.`);\n        if (level < 0)\n            throw new RangeError(`Invalid verbosity: ${level}. 0 is minimum.`);\n        if (level > 3)\n            throw new RangeError(`Invalid verbosity: ${level}. 3 is maximum.`);\n        cached = level;\n        return cached;\n    });\n}\nexports.verbosityLevel = verbosityLevel;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setupNetdata = void 0;\nconst spawn_1 = require(\"../../../utils/spawn\");\nfunction setupNetdata() {\n    return __awaiter(this, void 0, void 0, function* () {\n        // Nightly is recommended by Netdata https://docs.netdata.cloud/packaging/installer/#nightly-vs-stable-releases\n        // const installScriptNightly = 'https://my-netdata.io/kickstart.sh';\n        const installScriptStable = 'https://my-netdata.io/kickstart-static64.sh';\n        // cSpell:ignore dont\n        yield spawn_1.exec(`bash <(curl -Ss \"${installScriptStable}\") --dont-wait`);\n        // TODO: configure to work with nginx?\n    });\n}\nexports.setupNetdata = setupNetdata;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setupTimezone = void 0;\nconst fs_1 = require(\"../../utils/fs\");\nconst readConfig_1 = require(\"./readConfig\");\nfunction setupTimezone() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { runtimeServerTimezone } = yield readConfig_1.readConfig();\n        if (!runtimeServerTimezone)\n            return;\n        console.log('Setting timezone to:', runtimeServerTimezone);\n        const path = '/etc/localtime';\n        const next = `/usr/share/zoneinfo/${runtimeServerTimezone}`;\n        yield fs_1.ensureLinkIs(next, path);\n    });\n}\nexports.setupTimezone = setupTimezone;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setupNginx = void 0;\nconst fs_1 = require(\"../../utils/fs\");\nconst spawn_1 = require(\"../../utils/spawn\");\nconst aptDependencies_1 = require(\"./aptDependencies\");\nconst readConfig_1 = require(\"./readConfig\");\nconst io_1 = require(\"../../utils/io\");\naptDependencies_1.addAptDependencies('nginx', 'certbot', 'ssl-cert');\n// cSpell:ignore letsencrypt webroot\nconst certbotWebrootPath = '/var/lib/letsencrypt/webroot';\n// Folder containing live certs from letsencrypt\nconst letsencryptLive = '/etc/letsencrypt/live';\nconst nginxConf = `user www-data;\nworker_processes auto;\npid /run/nginx.pid;\n\ninclude modules-enabled/*.conf;\n\nevents {\n    worker_connections 768;\n    # multi_accept on;\n}\n\nhttp {\n    include conf.d/*.conf;\n}\n`;\nfunction setupNginxSnips() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const dir = '/etc/nginx/snips';\n        yield fs_1.mkdir(dir);\n        const snips = {};\n        snips['force-main-https'] = `location / {\n    return 301 https://$server_name$request_uri;\n    #rewrite ^ https://$server_name$request_uri? permanent;\n}\n`;\n        snips.letsencrypt = `location ^~ /.well-known/acme-challenge/ {\n    default_type \"text/plain\";\n    root ${certbotWebrootPath};\n}\n\nlocation = /.well-known/acme-challenge/ {\n    return 404;\n}\n`;\n        // Simplified proxy headers\n        snips['proxy-forwarded-headers'] = `proxy_set_header Host $host;\nproxy_set_header Forwarded $proxy_add_forwarded;\n`;\n        // cSpell:ignore SAMEORIGIN\n        // Popular forwarded headers\n        snips['proxy-headers'] = `proxy_set_header Host $host;\n#proxy_set_header Port $server_port;\n#proxy_set_header X-Forwarded-Port $server_port;\nproxy_set_header X-Real-IP $remote_addr;\nproxy_set_header X-Forwarded-Proto $scheme;\n#proxy_set_header X-Forwarded-Ssl $https;\nproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n#proxy_set_header X-Frame-Options SAMEORIGIN;\n`;\n        // Trust Cloudflare to set some headers for us\n        snips['trust-cloudflare-ip'] = `set_real_ip_from 103.21.244.0/22;\nset_real_ip_from 103.22.200.0/22;\nset_real_ip_from 103.31.4.0/22;\nset_real_ip_from 104.16.0.0/12;\nset_real_ip_from 108.162.192.0/18;\nset_real_ip_from 131.0.72.0/22;\nset_real_ip_from 141.101.64.0/18;\nset_real_ip_from 162.158.0.0/15;\nset_real_ip_from 172.64.0.0/13;\nset_real_ip_from 173.245.48.0/20;\nset_real_ip_from 188.114.96.0/20;\nset_real_ip_from 190.93.240.0/20;\nset_real_ip_from 197.234.240.0/22;\nset_real_ip_from 198.41.128.0/17;\nset_real_ip_from 2400:cb00::/32;\nset_real_ip_from 2606:4700::/32;\nset_real_ip_from 2803:f800::/32;\nset_real_ip_from 2405:b500::/32;\nset_real_ip_from 2405:8100::/32;\nset_real_ip_from 2c0f:f248::/32;\nset_real_ip_from 2a06:98c0::/29;\n\n# use any of the following two\nreal_ip_header CF-Connecting-IP;\n#real_ip_header X-Forwarded-For;\n`;\n        // cSpell:ignore websockets fastcgi\n        // Headers needed to enable Web Sockets\n        snips['websockets-proxy-headers'] = `proxy_http_version 1.1;\nproxy_set_header Upgrade $http_upgrade;\nproxy_set_header Connection $connection_upgrade;\n`;\n        yield Promise.all([\n            // let Ubuntu manage this one\n            fs_1.ensureLinkIs('../snippets/fastcgi-php.conf', `${dir}/fastcgi-php.conf`),\n            fs_1.ensureFilesAre(Object.entries(snips).map(([config, contents]) => ({\n                filename: `${dir}/${config}.conf`,\n                contents,\n            }))),\n        ]);\n    });\n}\n// cSpell:ignore nopush nodelay keepalive sendfile proxied\nfunction setupNginxConfigs() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const dir = '/etc/nginx/conf.d';\n        const { domains } = yield readConfig_1.readConfig();\n        if (!domains)\n            throw new Error('Domains unset!');\n        const keys = {\n            // cSpell:ignore snakeoil\n            public: '/etc/ssl/certs/ssl-cert-snakeoil.pem',\n            private: '/etc/ssl/private/ssl-cert-snakeoil.key',\n        };\n        // Only use real certs if they exist.\n        yield fs_1.exists(`${letsencryptLive}/${domains[0]}/fullchain.pem`).then(existing => {\n            if (existing) {\n                keys.public = `${letsencryptLive}/${domains[0]}/fullchain.pem`;\n                keys.private = `${letsencryptLive}/${domains[0]}/privkey.pem`;\n            }\n        });\n        const conf = {};\n        conf.basic = `sendfile on;\ntcp_nopush on;\ntcp_nodelay on;\nkeepalive_timeout 65;\ntypes_hash_max_size 2048;\n# server_tokens off;\n\n# server_names_hash_bucket_size 64;\n# server_name_in_redirect off;\n\ninclude /etc/nginx/mime.types;\ndefault_type application/octet-stream;\n`;\n        conf.gzip = `gzip on;\ngzip_disable \"msie6\";\n\n# gzip_vary on;\n# gzip_proxied any;\n# gzip_comp_level 6;\n# gzip_buffers 16 8k;\n# gzip_http_version 1.1;\n# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;\n`;\n        // Allow upgrading http connections. Required for Websockets.\n        conf['http-upgrade'] = `map $http_upgrade $connection_upgrade {\n    default upgrade;\n    ''      close;\n}\n`;\n        // Where should we log to\n        conf.logging = `access_log /var/log/nginx/access.log;\nerror_log /var/log/nginx/error.log;\n`;\n        const validForwardedHeaderPattern = '\"~^(,[ \\\\\\\\t]*)*([!#$%&\\'*+.^_`|~0-9A-Za-z-]+=([!#$%&\\'*+.^_`|~0-9A-Za-z-]+|\\\\\"([\\\\\\\\t \\\\\\\\x21\\\\\\\\x23-\\\\\\\\x5B\\\\\\\\x5D-\\\\\\\\x7E\\\\\\\\x80-\\\\\\\\xFF]|\\\\\\\\\\\\\\\\[\\\\\\\\t \\\\\\\\x21-\\\\\\\\x7E\\\\\\\\x80-\\\\\\\\xFF])*\\\\\"))?(;([!#$%&\\'*+.^_`|~0-9A-Za-z-]+=([!#$%&\\'*+.^_`|~0-9A-Za-z-]+|\\\\\"([\\\\\\\\t \\\\\\\\x21\\\\\\\\x23-\\\\\\\\x5B\\\\\\\\x5D-\\\\\\\\x7E\\\\\\\\x80-\\\\\\\\xFF]|\\\\\\\\\\\\\\\\[\\\\\\\\t \\\\\\\\x21-\\\\\\\\x7E\\\\\\\\x80-\\\\\\\\xFF])*\\\\\"))?)*([ \\\\\\\\t]*,([ \\\\\\\\t]*([!#$%&\\'*+.^_`|~0-9A-Za-z-]+=([!#$%&\\'*+.^_`|~0-9A-Za-z-]+|\\\\\"([\\\\\\\\t \\\\\\\\x21\\\\\\\\x23-\\\\\\\\x5B\\\\\\\\x5D-\\\\\\\\x7E\\\\\\\\x80-\\\\\\\\xFF]|\\\\\\\\\\\\\\\\[\\\\\\\\t \\\\\\\\x21-\\\\\\\\x7E\\\\\\\\x80-\\\\\\\\xFF])*\\\\\"))?(;([!#$%&\\'*+.^_`|~0-9A-Za-z-]+=([!#$%&\\'*+.^_`|~0-9A-Za-z-]+|\\\\\"([\\\\\\\\t \\\\\\\\x21\\\\\\\\x23-\\\\\\\\x5B\\\\\\\\x5D-\\\\\\\\x7E\\\\\\\\x80-\\\\\\\\xFF]|\\\\\\\\\\\\\\\\[\\\\\\\\t \\\\\\\\x21-\\\\\\\\x7E\\\\\\\\x80-\\\\\\\\xFF])*\\\\\"))?)*)?)*$\"\\n';\n        //\n        conf['proxy-add-forwarded'] = `map $remote_addr $proxy_forwarded_elem {\n    # IPv4 addresses can be sent as-is\n    ~^[0-9.]+$          \"for=$remote_addr\";\n\n    # IPv6 addresses need to be bracketed and quoted\n    ~^[0-9A-Fa-f:.]+$   \"for=\\\\\"[$remote_addr]\\\\\"\";\n\n    # Unix domain socket names cannot be represented in RFC 7239 syntax\n    default             \"for=unknown\";\n}\n\nmap $http_forwarded $proxy_add_forwarded {\n    # If the incoming Forwarded header is syntactically valid, append to it\n    ${validForwardedHeaderPattern} \"$http_forwarded, $proxy_forwarded_elem\";\n\n    # Otherwise, replace it\n    default \"$proxy_forwarded_elem\";\n}\n`;\n        // List of nginx server blocks (in files)\n        conf.servers = `include servers/*.conf;\n`;\n        // Default SSL configurations.\n        conf.ssl = `##\n# SSL Settings\n##\n\n# Default keys. Overridden in server configs.\nssl_certificate     ${keys.public};\nssl_certificate_key ${keys.private};\n\n\nssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE\nssl_prefer_server_ciphers on;\n`;\n        yield fs_1.mkdir(dir).then(() => fs_1.ensureFilesAre(Object.entries(conf).map(([config, contents]) => ({\n            filename: `${dir}/${config}.conf`,\n            contents,\n        }))));\n    });\n}\nfunction setupNginxBasicServers() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const dir = '/etc/nginx/servers';\n        yield fs_1.mkdir(dir);\n        const serverConfigDefault = `server {\n      listen 80;\n      listen [::]:80;\n      listen 443 ssl;\n      listen [::]:443 ssl;\n  \n      include snips/letsencrypt.conf;\n  \n      location / {\n          default_type text/plain;\n          return 200 'Nothing to see here...';\n      }\n  }\n  `;\n        yield fs_1.ensureFileIs(`${dir}/00_default.conf`, serverConfigDefault);\n    });\n}\nfunction setupNginxServersFull() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { webRootPath, domains, service: { name: serviceName }, } = yield readConfig_1.readConfig();\n        if (!domains)\n            throw new Error('Domains unset!');\n        if (webRootPath)\n            yield fs_1.mkdir(webRootPath);\n        const upstreamUniqueName = domains[0].replace('.', '_');\n        // Name of the socket file used for communications with\n        const socketFilename = 'sock';\n        // Directory the daemon runs in\n        const workingDir = `/run/${serviceName}`;\n        // Nginx backend location\n        const upstreamHost = `unix:${workingDir}/${socketFilename}`;\n        const serverConfig = `server {\n    server_name ${domains.join(' ')};\n    listen 80 default_server;\n    listen [::]:80 default_server;\n\n    include snips/letsencrypt.conf;\n    include snips/force-main-https.conf;\n}\n\nserver {\n    server_name ${domains.join(' ')};\n    listen 443 ssl default_server;\n    listen [::]:443 ssl default_server;\n\n    ssl_certificate     ${letsencryptLive}/${domains[0]}/fullchain.pem;\n    ssl_certificate_key ${letsencryptLive}/${domains[0]}/privkey.pem;\n\n    include snips/trust-cloudflare-ip.conf;\n\n    location / ${!webRootPath\n            ? ''\n            : `{\n      root ${webRootPath};\n      # If files exist in root, serve them. Otherwise fallback to proxy.\n      try_files $uri $uri/index.html @proxyHandler;\n    }\n    \n    location @proxyHandler `}{\n        include snips/websockets-proxy-headers.conf;\n        include snips/proxy-headers.conf;\n        proxy_pass http://${upstreamUniqueName};\n    }\n}\n\nupstream ${upstreamUniqueName} {\n    server ${upstreamHost} fail_timeout=0;\n}\n`;\n        yield fs_1.ensureFileIs(`/etc/nginx/servers/${domains[0]}.conf`, serverConfig);\n    });\n}\nconst nginxConfigFile = '/etc/nginx/nginx.conf';\nfunction setupNginxBasic() {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield Promise.all([\n            fs_1.ensureFileIs(nginxConfigFile, nginxConf),\n            setupNginxSnips(),\n            setupNginxConfigs(),\n            setupNginxBasicServers(),\n        ]);\n    });\n}\n// cSpell:ignore logrotate logrotation\nconst certbotCliConfig = `authenticator = webroot\nwebroot-path = ${certbotWebrootPath}\n\n# Because we are using logrotate for greater flexibility, disable the\n# internal certbot logrotation.\nmax-log-backups = 0\n`;\nconst certbotPostRenewNginx = `#!/bin/bash\nsystemctl reload nginx\n`;\n// cSpell:ignore YOURDOMAIN privkey fullchain noninteractive\nfunction setupCertbot() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { domains } = yield readConfig_1.readConfig();\n        if (!domains)\n            throw new Error('Domains unset!');\n        yield Promise.all([\n            fs_1.ensureFileIs('/etc/letsencrypt/cli.ini', certbotCliConfig),\n            fs_1.mkdir(certbotWebrootPath),\n        ]);\n        /**\n         * Use this for other services that depend on generated keys but require them combined. Like ZNC.\n         */\n        const outputFile = '/var/lib/znc/znc.pem';\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const certbotPostRenewExampleFullChain = `#!/bin/bash\nYOURDOMAIN=\"${domains[0]}\"\n\n[[ $RENEWED_LINEAGE != \"${letsencryptLive}/$YOURDOMAIN\" ]] && exit 0\n\n# Combine certs into single file for some applications that don't support separation\ncat ${letsencryptLive}/$YOURDOMAIN/{privkey,fullchain}.pem > ${outputFile}\n`;\n        // TODO: Support multiple independent domains that serve different websites.\n        function doCertbot() {\n            return __awaiter(this, void 0, void 0, function* () {\n                if (!domains)\n                    throw new Error('Domains unset!');\n                // Run once for each nginx server. Generates one key pair. Must include all domains that share server.\n                yield spawn_1.spawn('certbot', \n                // cSpell:ignore certonly\n                'certonly', '--expand', '--noninteractive', '--agree-tos', \n                // Registered e-mail\n                '-m', \n                // TODO: use better email\n                `admin@${domains[0]}`, \n                // Add a \"--domain\" before each domain\n                ...domains.reduce((res, current) => res.concat('--domain', current), []));\n            });\n        }\n        yield doCertbot().catch(() => __awaiter(this, void 0, void 0, function* () {\n            // Sometimes, certbot is running on the runtime server (because of automatic certificate renewal with Systemd timer)\n            // When that happens, the executable fails. So, let's just wait 15 seconds and try again.\n            // If it fails *again*, for developer to manually re-run to fix.\n            // TODO: test if correct error code\n            yield new Promise(resolve => setTimeout(resolve, 15e3));\n            return doCertbot();\n        }));\n        // Running certbot creates the renewal folders we need\n        const hook = '/etc/letsencrypt/renewal-hooks/deploy/reload-nginx';\n        yield fs_1.ensureFileIs(hook, certbotPostRenewNginx);\n        yield fs_1.chmod(hook, 0o755);\n    });\n}\nfunction checkNginxConfig() {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield spawn_1.spawn('nginx', '-tc', nginxConfigFile);\n    });\n}\nfunction setupNginx() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { domains } = yield readConfig_1.readConfig();\n        if (!domains)\n            return;\n        // Ensure Let's Encrypt configuration is setup\n        yield setupNginxBasic();\n        yield checkNginxConfig().catch(() => __awaiter(this, void 0, void 0, function* () {\n            io_1.debug('Something went wrong. Clearing possibly broken configs and trying again.');\n            // TODO: Only clear out failing configs\n            yield Promise.all(domains.map(domain => fs_1.unlink(`/etc/nginx/servers/${domain}.conf`).catch(() => {\n                // function intentionally empty\n            })));\n            yield checkNginxConfig();\n            // If we fail again here, we've got bigger problems.\n        }));\n        yield spawn_1.exec(`systemctl reload nginx.service`);\n        // Before trying to get possibly new keys\n        yield setupCertbot();\n        // Only then do we make sure the rest of the server files are setup\n        yield setupNginxServersFull();\n        yield checkNginxConfig();\n        yield spawn_1.exec(`systemctl reload nginx.service`);\n    });\n}\nexports.setupNginx = setupNginx;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setupJournalbeat = void 0;\nconst fs_1 = require(\"../../../utils/fs\");\nconst spawn_1 = require(\"../../../utils/spawn\");\nconst readConfig_1 = require(\"../readConfig\");\nfunction setupJournalbeat() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { journalbeat } = yield readConfig_1.readConfig();\n        if (!journalbeat)\n            return;\n        yield spawn_1.exec('wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | apt-key add -');\n        // Replace list every time\n        yield fs_1.ensureFileIs('/etc/apt/sources.list.d/elastic-7.x.list', 'deb https://artifacts.elastic.co/packages/7.x/apt stable main\\n');\n        yield spawn_1.exec('apt-get update');\n        yield spawn_1.exec('apt-get install -y journalbeat');\n        // TODO: Add to list of apt\n        yield spawn_1.exec('systemctl enable journalbeat');\n        const disableLogging = `\n[Service]\nEnvironment=\"BEAT_LOG_OPTS= \"\n`;\n        const reload = fs_1.mkdir('/lib/systemd/system/journalbeat.service.d')\n            .then(() => fs_1.ensureFileIs('/lib/systemd/system/journalbeat.service.d/disable-logging.conf', disableLogging))\n            .then(() => spawn_1.exec('systemctl daemon-reload'));\n        let journalbeatConfig = `journalbeat.inputs:\n- paths: []\n  #backoff: 1s\n  #max_backoff: 20s\n  seek: cursor\n  #cursor_seek_fallback: head\n  #include_matches: []\n  #fields:\n\n#journalbeat:\n  #registry_file: registry\n\nsetup.template.settings:\n  index.number_of_shards: 1\n  #index.codec: best_compression\n  #_source.enabled: false\n\n#name:\n#tags: [\"service-X\", \"web-tier\"]\n#fields:\n\n#setup.dashboards.enabled: false\n#setup.dashboards.url:\n\nprocessors:\n  - add_host_metadata: ~\n  - add_cloud_metadata: ~  \n  - decode_json_fields:\n      fields: [\"message\"]\n      process_array: true\n      max_depth: 8\n      target: \"\"\n\n#logging.level: debug\n#logging.selectors: [\"*\"]\n\n#monitoring.enabled: false\n#monitoring.cluster_uuid:\n#monitoring.elasticsearch:\n\n#migration.6_to_7.enabled: true\n`;\n        if (journalbeat.kibanaHost) {\n            journalbeatConfig += `\nsetup.kibana:\n  host: \"${journalbeat.kibanaHost}\"\n`;\n        }\n        let configured = 0;\n        if (journalbeat.elastic.hosts.length) {\n            configured++;\n            journalbeatConfig += `\noutput.elasticsearch:\n  hosts: ${JSON.stringify(journalbeat.elastic.hosts)}\n  #protocol: \"https\"\n  username: ${JSON.stringify(journalbeat.elastic.username)}\n  password: ${JSON.stringify(journalbeat.elastic.password)}\n`;\n        }\n        if (journalbeat.logstashHosts.length) {\n            if (configured) {\n                console.log('Skipping logstash config in favor of elasticsearch');\n            }\n            else {\n                configured++;\n                journalbeatConfig += `\noutput.logstash:\n  hosts: ${JSON.stringify(journalbeat.logstashHosts)}\n  #ssl.certificate_authorities: [\"/etc/pki/root/ca.pem\"]\n  #ssl.certificate: \"/etc/pki/client/cert.pem\"\n  #ssl.key: \"/etc/pki/client/cert.key\"\n`;\n            }\n        }\n        if (!configured)\n            console.log('Warning: No journalbeat outputs configured');\n        const change = yield fs_1.ensureFileIs('/etc/journalbeat/journalbeat.yml', journalbeatConfig);\n        yield reload;\n        yield spawn_1.exec(`systemctl ${change ? 'restart' : 'start'} journalbeat`);\n    });\n}\nexports.setupJournalbeat = setupJournalbeat;\n","module.exports = require(\"os\");","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.prepare = void 0;\nconst Nginx_1 = require(\"./setup/Nginx\");\nconst MainServiceFiles_1 = require(\"./setup/MainServiceFiles\");\nconst MonitoringTools_1 = require(\"./setup/MonitoringTools\");\n// import { setupDevTools } from './setup/DeveloperTools';\nconst basicServer_1 = require(\"./setup/basicServer\");\nconst printOSInfo_1 = require(\"../utils/printOSInfo\");\nfunction prepare() {\n    return __awaiter(this, void 0, void 0, function* () {\n        // Initial smoke test\n        yield printOSInfo_1.printOSInfo();\n        yield basicServer_1.basicServerSetup();\n        yield Promise.all([\n            MonitoringTools_1.setupMonitoringTools(),\n            // setupDevTools(),\n            Nginx_1.setupNginx(),\n            MainServiceFiles_1.setupMainServiceFiles(),\n        ]);\n        console.log('Server configured!');\n    });\n}\nexports.prepare = prepare;\nif (!module.parent) {\n    prepare().catch(e => {\n        console.log('Error running!');\n        console.log(e);\n        process.exitCode = 1;\n    });\n}\n","module.exports = require(\"child_process\");","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setupMonitoringTools = void 0;\nconst Journalbeat_1 = require(\"./MonitorTools/Journalbeat\");\nconst Netdata_1 = require(\"./MonitorTools/Netdata\");\nconst Cockpit_1 = require(\"./MonitorTools/Cockpit\");\nconst FailureNotificationServices_1 = require(\"./MonitorTools/FailureNotificationServices\");\nconst PersistentJournal_1 = require(\"./MonitorTools/PersistentJournal\");\nfunction setupMonitoringTools() {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield Promise.all([\n            Journalbeat_1.setupJournalbeat(),\n            Netdata_1.setupNetdata(),\n            Cockpit_1.setupCockpit(),\n            FailureNotificationServices_1.setupFailureNotificationService(),\n            PersistentJournal_1.setupPersistentJournal(),\n        ]);\n    });\n}\nexports.setupMonitoringTools = setupMonitoringTools;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setupFailureNotificationService = void 0;\nfunction setupFailureNotificationService() {\n    return __awaiter(this, void 0, void 0, function* () {\n        // TODO: Fill out\n        // Ruby Service\n        // https://github.com/joonty/systemd_mon\n        // Manually with Systemd\n        // https://serverfault.com/questions/694818/get-notification-when-systemd-monitored-service-enters-failed-state\n    });\n}\nexports.setupFailureNotificationService = setupFailureNotificationService;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setupAptDependencies = exports.addAptDependencies = void 0;\nconst fs_1 = require(\"../../utils/fs\");\nconst spawn_1 = require(\"../../utils/spawn\");\nconst readConfig_1 = require(\"./readConfig\");\nconst deps = [];\n// List of apt dependencies needed by various parts\nfunction addAptDependencies(...dependencies) {\n    deps.push(...dependencies);\n}\nexports.addAptDependencies = addAptDependencies;\nfunction setupAptDependencies() {\n    var _a, _b;\n    return __awaiter(this, void 0, void 0, function* () {\n        // TODO: Don't assume yarn\n        yield spawn_1.exec('curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -');\n        yield fs_1.ensureFileIs('/etc/apt/sources.list.d/yarn.list', 'deb https://dl.yarnpkg.com/debian/ stable main');\n        addAptDependencies('yarn');\n        yield spawn_1.spawn('apt-get', 'update');\n        yield spawn_1.spawn('apt-get', 'upgrade', '-y');\n        const config = yield readConfig_1.readConfig();\n        addAptDependencies(...((_a = config.aptDependencies) !== null && _a !== void 0 ? _a : []));\n        addAptDependencies(...((_b = config.runtimeAptDependencies) !== null && _b !== void 0 ? _b : []));\n        // cSpell:ignore noninteractive autoremove confnew confdef confold dpkg\n        const useNew = true;\n        const dpkgForceConfOptions = useNew\n            ? 'force-confnew'\n            : 'force-confdef\\nforce-confold';\n        yield fs_1.ensureFileIs('/etc/dpkg/dpkg.cfg.d/force-conf.cfg', `${dpkgForceConfOptions}\\n`);\n        yield spawn_1.spawn('apt-get', \n        // Avoid all interactive prompts https://serverfault.com/questions/227190\n        {\n            stdio: 'inherit',\n            env: Object.assign(Object.assign({}, process.env), { DEBIAN_FRONTEND: 'noninteractive' }),\n        }, 'install', '-yq', ...new Set(deps));\n        yield spawn_1.spawn('apt-get', 'autoremove', '-y');\n    });\n}\nexports.setupAptDependencies = setupAptDependencies;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setupPersistentJournal = void 0;\nconst fs_1 = require(\"../../../utils/fs\");\nfunction setupPersistentJournal() {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield fs_1.mkdir('/var/log/journal');\n    });\n}\nexports.setupPersistentJournal = setupPersistentJournal;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.printOSInfo = void 0;\nconst fs_1 = require(\"fs\");\nconst { readFile } = fs_1.promises;\nfunction printOSInfo() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const release = (yield readFile('/etc/lsb-release')).toString();\n        // cSpell:ignore DISTRIB\n        /**\n         * Sample /etc/lsb-release:\n         * DISTRIB_ID=Ubuntu\n         * DISTRIB_RELEASE=18.04\n         * DISTRIB_CODENAME=bionic\n         * DISTRIB_DESCRIPTION=\"Ubuntu 18.04.3 LTS\".\n         */\n        // Dirty get OS version\n        const osVersion = release.split('\\n')[3].split('=')[1].split('\"')[1];\n        console.log('OS Version', osVersion);\n    });\n}\nexports.printOSInfo = printOSInfo;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.exec = exports.spawn = void 0;\nconst child_process_1 = require(\"child_process\");\nconst util_1 = require(\"util\");\nconst io_1 = require(\"./io\");\nconst defaultShell = '/bin/bash';\nfunction spawn(command, first, ...args) {\n    const defOpts = { stdio: 'inherit' };\n    let opts;\n    if (typeof first === 'string') {\n        args.unshift(first);\n        opts = defOpts;\n    }\n    else {\n        if (first === true) {\n            opts = Object.assign(Object.assign({}, defOpts), { shell: defaultShell });\n        }\n        else {\n            opts = Object.assign(Object.assign({}, defOpts), first);\n        }\n    }\n    io_1.debug('Spawning', command, args);\n    const proc = child_process_1.spawn(command, args, opts);\n    const ret = new Promise((resolve, reject) => {\n        proc.on('exit', exitCode => {\n            if (exitCode) {\n                const e = new Error(`Exit code: ${exitCode}`);\n                e.exitCode = exitCode;\n                reject(e);\n            }\n            else {\n                resolve();\n            }\n        });\n    });\n    ret.child = proc;\n    return ret;\n}\nexports.spawn = spawn;\nconst execP = util_1.promisify(child_process_1.exec);\n/**\n * Run a command and capture output.\n *\n * Prints nothing.\n *\n * - Shell\n * - Captured & Buffered output\n * - Promised result.\n *\n * @param {string} command - The command to run.\n * @param {true|string} shell - Should we use a shell. Default true.\n * @returns {ChildProcess} The child.\n */\nfunction exec(command, shell = true) {\n    io_1.debug('Exec:', command);\n    if (shell === null) {\n        return execP(command);\n    }\n    if (shell === true)\n        shell = defaultShell;\n    return execP(command, { shell });\n}\nexports.exec = exec;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setupSecurity = void 0;\nconst fs_1 = require(\"../../utils/fs\");\nconst spawn_1 = require(\"../../utils/spawn\");\nfunction setupSecurity() {\n    return __awaiter(this, void 0, void 0, function* () {\n        // Disable password authentication on sshd\n        const changed = yield fs_1.ensureFileContains('/etc/ssh/sshd_config', '\\nPasswordAuthentication no\\n');\n        if (changed) {\n            yield spawn_1.exec('systemctl reload sshd');\n        }\n    });\n}\nexports.setupSecurity = setupSecurity;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.basicServerSetup = void 0;\nconst Timezone_1 = require(\"./Timezone\");\nconst aptDependencies_1 = require(\"./aptDependencies\");\nconst Security_1 = require(\"./Security\");\nconst readConfig_1 = require(\"./readConfig\");\nconst Root_1 = require(\"./Root\");\nfunction basicServerSetup() {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield Promise.all([\n            Security_1.setupSecurity(),\n            readConfig_1.readConfig()\n                .then(c => c.authorizedKeys)\n                .then((keys) => __awaiter(this, void 0, void 0, function* () {\n                if (keys.length)\n                    return Root_1.setAuthorizedKeys('root', keys);\n            })),\n            Timezone_1.setupTimezone(),\n        ]);\n        yield aptDependencies_1.setupAptDependencies();\n    });\n}\nexports.basicServerSetup = basicServerSetup;\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst os = __importStar(require(\"os\"));\n/**\n * Commands\n *\n * Command Format:\n *   ::name key=value,key=value::message\n *\n * Examples:\n *   ::warning::This is the message\n *   ::set-env name=MY_VAR::some value\n */\nfunction issueCommand(command, properties, message) {\n    const cmd = new Command(command, properties, message);\n    process.stdout.write(cmd.toString() + os.EOL);\n}\nexports.issueCommand = issueCommand;\nfunction issue(name, message = '') {\n    issueCommand(name, {}, message);\n}\nexports.issue = issue;\nconst CMD_STRING = '::';\nclass Command {\n    constructor(command, properties, message) {\n        if (!command) {\n            command = 'missing.command';\n        }\n        this.command = command;\n        this.properties = properties;\n        this.message = message;\n    }\n    toString() {\n        let cmdStr = CMD_STRING + this.command;\n        if (this.properties && Object.keys(this.properties).length > 0) {\n            cmdStr += ' ';\n            let first = true;\n            for (const key in this.properties) {\n                if (this.properties.hasOwnProperty(key)) {\n                    const val = this.properties[key];\n                    if (val) {\n                        if (first) {\n                            first = false;\n                        }\n                        else {\n                            cmdStr += ',';\n                        }\n                        cmdStr += `${key}=${escapeProperty(val)}`;\n                    }\n                }\n            }\n        }\n        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;\n        return cmdStr;\n    }\n}\n/**\n * Sanitizes an input into a string so it can be passed into issueCommand safely\n * @param input input to sanitize into a string\n */\nfunction toCommandValue(input) {\n    if (input === null || input === undefined) {\n        return '';\n    }\n    else if (typeof input === 'string' || input instanceof String) {\n        return input;\n    }\n    return JSON.stringify(input);\n}\nexports.toCommandValue = toCommandValue;\nfunction escapeData(s) {\n    return toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A');\n}\nfunction escapeProperty(s) {\n    return toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A')\n        .replace(/:/g, '%3A')\n        .replace(/,/g, '%2C');\n}\n//# sourceMappingURL=command.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setupMainServiceFiles = void 0;\nconst spawn_1 = require(\"../../utils/spawn\");\nconst fs_1 = require(\"../../utils/fs\");\nconst readConfig_1 = require(\"./readConfig\");\nfunction setupMainServiceFiles() {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const { service } = yield readConfig_1.readConfig();\n        const serviceName = service.name;\n        const serviceDescription = (_a = service.description) !== null && _a !== void 0 ? _a : 'Runtime server';\n        const startServerCommand = service.startServerCommand;\n        const extraService = service.extraConfigs;\n        const serviceFile = `/etc/systemd/system/${serviceName}.service`;\n        const HomeDir = `/var/lib/${serviceName}`;\n        const runtimeUser = 'www-data';\n        const runtimeUid = spawn_1.exec(`id -u ${runtimeUser}`);\n        const runtimeGid = spawn_1.exec(`id -g ${runtimeUser}`);\n        const dir1 = fs_1.mkdir(`${serviceFile}.d`);\n        const dir2 = fs_1.mkdir(`/opt`);\n        const dir3 = fs_1.mkdir(HomeDir).then(() => __awaiter(this, void 0, void 0, function* () {\n            return yield Promise.all([\n                fs_1.chmod(HomeDir, 0o700),\n                fs_1.chown(HomeDir, Number((yield runtimeUid).stdout), Number((yield runtimeGid).stdout)),\n            ]);\n        }));\n        const serviceFileContents = `[Unit]\nDescription=${serviceDescription}\nAfter=network.target\n\n[Service]\nType=simple\nRestart=always\nEnvironment=LISTEN_PATH=\"/run/${serviceName}/sock\"\nRuntimeDirectory=${serviceName}\nWorkingDirectory=/opt/${serviceName}\nExecStart=${startServerCommand}\nEnvironment=HOME=\"${HomeDir}\"\nUser=${runtimeUser}\n${extraService ? `\\n# Extra configs\\n${extraService}\\n` : '\\n'}\n[Install]\nWantedBy=default.target\n`;\n        yield fs_1.ensureFileIs(serviceFile, serviceFileContents);\n        // Tell systemd to read our changes\n        yield spawn_1.exec(`systemctl daemon-reload`);\n        // Run service on server boot\n        if (service.enable)\n            yield spawn_1.exec(`systemctl enable ${serviceName}.service`);\n        yield Promise.all([dir1, dir2, dir3]);\n    });\n}\nexports.setupMainServiceFiles = setupMainServiceFiles;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst command_1 = require(\"./command\");\nconst os = __importStar(require(\"os\"));\nconst path = __importStar(require(\"path\"));\n/**\n * The code to exit an action\n */\nvar ExitCode;\n(function (ExitCode) {\n    /**\n     * A code indicating that the action was successful\n     */\n    ExitCode[ExitCode[\"Success\"] = 0] = \"Success\";\n    /**\n     * A code indicating that the action was a failure\n     */\n    ExitCode[ExitCode[\"Failure\"] = 1] = \"Failure\";\n})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));\n//-----------------------------------------------------------------------\n// Variables\n//-----------------------------------------------------------------------\n/**\n * Sets env variable for this action and future actions in the job\n * @param name the name of the variable to set\n * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction exportVariable(name, val) {\n    const convertedVal = command_1.toCommandValue(val);\n    process.env[name] = convertedVal;\n    command_1.issueCommand('set-env', { name }, convertedVal);\n}\nexports.exportVariable = exportVariable;\n/**\n * Registers a secret which will get masked from logs\n * @param secret value of the secret\n */\nfunction setSecret(secret) {\n    command_1.issueCommand('add-mask', {}, secret);\n}\nexports.setSecret = setSecret;\n/**\n * Prepends inputPath to the PATH (for this action and future actions)\n * @param inputPath\n */\nfunction addPath(inputPath) {\n    command_1.issueCommand('add-path', {}, inputPath);\n    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;\n}\nexports.addPath = addPath;\n/**\n * Gets the value of an input.  The value is also trimmed.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string\n */\nfunction getInput(name, options) {\n    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';\n    if (options && options.required && !val) {\n        throw new Error(`Input required and not supplied: ${name}`);\n    }\n    return val.trim();\n}\nexports.getInput = getInput;\n/**\n * Sets the value of an output.\n *\n * @param     name     name of the output to set\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setOutput(name, value) {\n    command_1.issueCommand('set-output', { name }, value);\n}\nexports.setOutput = setOutput;\n/**\n * Enables or disables the echoing of commands into stdout for the rest of the step.\n * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.\n *\n */\nfunction setCommandEcho(enabled) {\n    command_1.issue('echo', enabled ? 'on' : 'off');\n}\nexports.setCommandEcho = setCommandEcho;\n//-----------------------------------------------------------------------\n// Results\n//-----------------------------------------------------------------------\n/**\n * Sets the action status to failed.\n * When the action exits it will be with an exit code of 1\n * @param message add error issue message\n */\nfunction setFailed(message) {\n    process.exitCode = ExitCode.Failure;\n    error(message);\n}\nexports.setFailed = setFailed;\n//-----------------------------------------------------------------------\n// Logging Commands\n//-----------------------------------------------------------------------\n/**\n * Gets whether Actions Step Debug is on or not\n */\nfunction isDebug() {\n    return process.env['RUNNER_DEBUG'] === '1';\n}\nexports.isDebug = isDebug;\n/**\n * Writes debug message to user log\n * @param message debug message\n */\nfunction debug(message) {\n    command_1.issueCommand('debug', {}, message);\n}\nexports.debug = debug;\n/**\n * Adds an error issue\n * @param message error issue message. Errors will be converted to string via toString()\n */\nfunction error(message) {\n    command_1.issue('error', message instanceof Error ? message.toString() : message);\n}\nexports.error = error;\n/**\n * Adds an warning issue\n * @param message warning issue message. Errors will be converted to string via toString()\n */\nfunction warning(message) {\n    command_1.issue('warning', message instanceof Error ? message.toString() : message);\n}\nexports.warning = warning;\n/**\n * Writes info to log with console.log.\n * @param message info message\n */\nfunction info(message) {\n    process.stdout.write(message + os.EOL);\n}\nexports.info = info;\n/**\n * Begin an output group.\n *\n * Output until the next `groupEnd` will be foldable in this group\n *\n * @param name The name of the output group\n */\nfunction startGroup(name) {\n    command_1.issue('group', name);\n}\nexports.startGroup = startGroup;\n/**\n * End an output group.\n */\nfunction endGroup() {\n    command_1.issue('endgroup');\n}\nexports.endGroup = endGroup;\n/**\n * Wrap an asynchronous function call in a group.\n *\n * Returns the same type as the function itself.\n *\n * @param name The name of the group\n * @param fn The function to wrap in the group\n */\nfunction group(name, fn) {\n    return __awaiter(this, void 0, void 0, function* () {\n        startGroup(name);\n        let result;\n        try {\n            result = yield fn();\n        }\n        finally {\n            endGroup();\n        }\n        return result;\n    });\n}\nexports.group = group;\n//-----------------------------------------------------------------------\n// Wrapper action state\n//-----------------------------------------------------------------------\n/**\n * Saves state for current action, the state can only be retrieved by this action's post job execution.\n *\n * @param     name     name of the state to store\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction saveState(name, value) {\n    command_1.issueCommand('save-state', { name }, value);\n}\nexports.saveState = saveState;\n/**\n * Gets the value of an state set by this action's main execution.\n *\n * @param     name     name of the state to get\n * @returns   string\n */\nfunction getState(name) {\n    return process.env[`STATE_${name}`] || '';\n}\nexports.getState = getState;\n//# sourceMappingURL=core.js.map","module.exports = require(\"path\");","module.exports = require(\"util\");","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setupRoot = exports.setAuthorizedKeys = void 0;\nconst fs_1 = require(\"../../utils/fs\");\nconst User_1 = require(\"../../utils/User\");\nconst path_1 = require(\"path\");\nfunction setAuthorizedKeys(user, keys) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const userDir = yield User_1.userHome(user);\n        const sshConfDir = path_1.join(userDir, '.ssh');\n        yield fs_1.mkdir(sshConfDir);\n        yield fs_1.ensureFileIs(path_1.join(sshConfDir, 'authorized_keys'), [...keys, ''].join('\\n'));\n    });\n}\nexports.setAuthorizedKeys = setAuthorizedKeys;\n/**\n * Configure root user settings.\n *\n * @param {string[]} sources - List of URLs to load developer keys from.\n */\nfunction setupRoot(sources) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const userDir = yield User_1.userHome('root');\n        const sshConfDir = path_1.join(userDir, '.ssh');\n        yield fs_1.mkdir(sshConfDir);\n        if (!sources)\n            sources = [];\n        yield Promise.all([\n            // Make it easy for root user to clone from github\n            User_1.fixKnownHosts(userDir),\n            setAuthorizedKeys('root', sources !== null && sources !== void 0 ? sources : []),\n        ]);\n    });\n}\nexports.setupRoot = setupRoot;\n","module.exports = require(\"fs\");","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fixKnownHosts = exports.ensureKey = exports.createAndConfigureUser = exports.userHome = void 0;\nconst path_1 = require(\"path\");\nconst fs_1 = require(\"./fs\");\nconst spawn_1 = require(\"./spawn\");\nconst userGroups = ['sudo', 'adm', 'systemd-journal'];\nconst UsernameInUseUserAddExitValue = 9;\nfunction userHome(name) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // TODO: Read from os\n        return name === 'root' ? '/root' : `/home/${name}`;\n    });\n}\nexports.userHome = userHome;\n/**\n * Create a new user and setup home dir.\n *\n * @param {string} name - Username to make.\n */\nfunction createAndConfigureUser(name) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const command = [];\n        // cSpell:ignore useradd\n        command.push('useradd');\n        // Don't use a group with same name as user (use \"users\" instead)\n        command.push('--no-user-group');\n        command.push('--gid', 'users');\n        command.push('--shell', '/bin/bash');\n        // Create home directory for user\n        command.push('--create-home');\n        // Default list of groups\n        command.push('--groups', userGroups.join(','));\n        // Username we're making\n        command.push(name);\n        yield spawn_1.exec(command.join(' ')).catch(e => {\n            if (e.code !== UsernameInUseUserAddExitValue)\n                throw e;\n            console.log(`User ${name} exists`);\n            // cSpell:ignore usermod\n            // TODO: `usermod` to make sure user options are consistent (in case they change)\n        });\n        const home = yield userHome(name);\n        yield fs_1.mkdir(`${home}/.ssh`);\n        yield fixKnownHosts(home);\n    });\n}\nexports.createAndConfigureUser = createAndConfigureUser;\nfunction ensureKey(user, key) {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield fs_1.ensureFileContains(`${yield userHome(user)}/.ssh/authorized_keys`, key);\n    });\n}\nexports.ensureKey = ensureKey;\nconst GitHubKnownHosts = 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==';\nfunction fixKnownHosts(userDir) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return fs_1.ensureFileContains(path_1.join(userDir, '.ssh', 'known_hosts'), GitHubKnownHosts);\n    });\n}\nexports.fixKnownHosts = fixKnownHosts;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isGitHubAction = void 0;\nexports.isGitHubAction = process.env.GITHUB_ACTIONS === 'true' ||\n    process.argv.includes('--gh-actions');\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setupCockpit = void 0;\nconst aptDependencies_1 = require(\"../aptDependencies\");\naptDependencies_1.addAptDependencies('cockpit');\nfunction setupCockpit() {\n    return __awaiter(this, void 0, void 0, function* () {\n        // TODO: Setup user password\n        // TODO: configure to work with nginx?\n    });\n}\nexports.setupCockpit = setupCockpit;\n","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'loaded', {\n\t\tenumerable: true,\n\t\tget: function() { return module.l; }\n\t});\n\tObject.defineProperty(module, 'id', {\n\t\tenumerable: true,\n\t\tget: function() { return module.i; }\n\t});\n\treturn module;\n};"]}